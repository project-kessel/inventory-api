syntax = "proto3";

package kessel.inventory.v1beta1;

import "kessel/inventory/v1beta1/k8s_cluster_detail_nodes_inner.proto";

option go_package = "github.com/project-kessel/inventory-api/api/kessel/inventory/v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1";
option java_outer_classname = "K8sClusterDetailProto";

message K8sClusterDetail {

  // the aggregate status of the cluster
  enum ClusterStatus {
    CLUSTER_STATUS_UNSPECIFIED = 0;
    READY = 1;
    FAILED = 2;
    OFFLINE = 3;
    CLUSTER_STATUS_OTHER = 4; 
  }

  // The kubernetes vendor
  enum KubeVendor {
    KUBE_VENDOR_UNSPECIFIED = 0;
    KUBE_VENDOR_OTHER = 1;
    AKS = 2;
    EKS = 3;
    IKS = 4;
    OPENSHIFT = 5;
    GKE = 6;
  }

  // The platform on which this cluster is hosted
  enum CloudPlatform {
    CLOUD_PLATFORM_UNSPECIFIED = 0;
    NONE_UPI = 1;
    BAREMETAL_IPI = 2;
    BAREMETAL_UPI = 3;
    AWS_IPI = 4;
    AWS_UPI = 5;
    AZURE_IPI = 6;
    AZURE_UPI = 7;
    IBMCLOUD_IPI = 8;
    IBMCLOUD_UPI = 9;
    KUBEVIRT_IPI = 10;
    OPENSTACK_IPI = 11;
    OPENSTACK_UPI = 12;
    GCP_IPI = 13;
    GCP_UPI = 14;
    NUTANIX_IPI = 15;
    NUTANIX_UPI = 16;
    VSPHERE_IPI = 17;
    VSPHERE_UPI = 18;
    OVIRT_IPI = 19;
    CLOUD_PLATFORM_OTHER = 20;
    
  }

  // The OCP cluster ID or ARN etc for *KS
  string external_cluster_id = 219571597;

  ClusterStatus cluster_status = 499346904;

  // The version of kubernetes
  string kube_version = 395858490;

  KubeVendor kube_vendor = 264191642;

  // The version of the productized kubernetes distribution
  string vendor_version = 23961827;

  CloudPlatform cloud_platform = 476768062;

  repeated K8sClusterDetailNodesInner nodes = 75440785;
}
