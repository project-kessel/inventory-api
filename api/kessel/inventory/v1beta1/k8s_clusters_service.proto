syntax = "proto3";

package kessel.inventory.v1beta1;

import "google/api/annotations.proto";

import "kessel/inventory/v1beta1/k8s_cluster.proto";

option go_package = "github.com/project-kessel/inventory-api/api/kessel/inventory/v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1";

message CreateK8sClusterRequest {
  // The k8s cluster to create in Kessel Asset Inventory
  K8sCluster k8s_cluster = 1;
}

message CreateK8sClusterResponse {
  K8sCluster k8s_cluster = 1;
}

message UpdateK8sClusterRequest {
  // The {resource} format
  // \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
  string resource = 1;
  // The k8s clsuter to update
  K8sCluster k8s_cluster = 2;
}

message UpdateK8sClusterResponse {
  K8sCluster k8s_cluster = 1;
}

message DeleteK8sClusterRequest {
  // The {resource} format
  // \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
  string resource = 1;
}

message DeleteK8sClusterResponse {}

service KesselK8sClusterService {
  rpc CreateK8sCluster(CreateK8sClusterRequest) returns (CreateK8sClusterResponse) {
    option (google.api.http) = {
      post : "/api/inventory/v1beta1/k8sClusters"
      body : "*"
    };
  };

  rpc UpdateK8sCluster(UpdateK8sClusterRequest) returns (UpdateK8sClusterResponse) {
    option (google.api.http) = {
      put : "/api/inventory/v1beta1/k8sClusters/{resource}"
      body : "*"
    };
  };

  rpc DeleteK8sCluster(DeleteK8sClusterRequest) returns (DeleteK8sClusterResponse) {
    option (google.api.http) = {
      delete : "/api/inventory/v1beta1/k8sClusters/{resource}"
    };
  };
}
