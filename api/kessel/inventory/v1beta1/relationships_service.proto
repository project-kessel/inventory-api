syntax = "proto3";

package kessel.inventory.v1beta1;

import "google/api/annotations.proto";

import "kessel/inventory/v1beta1/policy_relationship.proto";
import "kessel/inventory/v1beta1/resource_relationship_reference.proto";

option go_package = "github.com/project-kessel/inventory-api/api/kessel/inventory/v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1";

message CreatePolicyRelationshipRequest {
  // The resource relationship to create in Kessel Asset Inventory
  PolicyRelationship policy_relationship = 1;
}

message CreatePolicyRelationshipResponse {
  // The resource relationship created in Kessel Asset Inventory
  PolicyRelationship policy_relationship = 1;
}

message UpdateResourceRelationshipRequest {
  // The subject {resource} and the object {resource}. A relationship is between
  // a Subject and an Object, e.g. a Policy (subject) has a propagated
  // relationship to an k8s cluster (object)
  ResourceRelationshipReference resources = 1;
  // Update a resource relationship in Kessel Asset Inventory by the {subject
  // resource, object resource}. A relationship is between a Subject and an
  // Object, e.g. a Policy (subject) has a propagated relationship to an k8s
  // cluster (object).. The {resource} format
  // \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
  PolicyRelationship policy_relationship = 2;
}

message UpdateResourceRelationshipResponse {}

message DeleteResourceRelationshipRequest {
  // The subject {resource} and the object {resource}. A relationship is between
  // a Subject and an Object, e.g. a Policy (subject) has a propagated
  // relationship to an k8s cluster (object)
  oneof relationship {
    ResourceRelationshipReference resources = 1;
  };
}

message DeleteResourceRelationshipResponse {}

service KesselPolicyRelationshipService {
  rpc CreatePolicyRelationship(CreatePolicyRelationshipRequest) returns (CreatePolicyRelationshipResponse) {
    option (google.api.http) = {
      post : "/api/inventory/v1beta1/policyRelationships"
      body : "*"
    };
  };

  rpc UpdateResourceRelationship(UpdateResourceRelationshipRequest) returns (UpdateResourceRelationshipResponse) {
    option (google.api.http) = {
      put: "/api/inventory/v1beta1/policyRelationships"
      body : "*"
    };
  };

  rpc DeleteResourceRelationship(DeleteResourceRelationshipRequest) returns (DeleteResourceRelationshipResponse) {
    option (google.api.http) = {
      delete: "/api/inventory/v1beta1/policyRelationships"
    };
  };
}
