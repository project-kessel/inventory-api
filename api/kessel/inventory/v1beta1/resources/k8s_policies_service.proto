syntax = "proto3";

package kessel.inventory.v1beta1.resources;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";

import "kessel/inventory/v1beta1/resources/k8s_policy.proto";
import "kessel/inventory/v1beta1/resources/reporter_data.proto";

option go_package = "github.com/project-kessel/inventory-api/api/kessel/inventory/v1beta1/resources";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1.resources";

message CreateK8sPolicyRequest {
  // The policy to create in Kessel Asset Inventory
  K8sPolicy k8s_policy = 1 [ json_name = "k8s_policy", (buf.validate.field).required = true ];
}

message CreateK8sPolicyResponse {}

message UpdateK8sPolicyRequest {
  // The resource to be updated will be defined by 
  // \"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\"
  // from the request body.
   K8sPolicy k8s_policy = 1 [ json_name = "k8s_policy", (buf.validate.field).required = true ];
}

message UpdateK8sPolicyResponse {}

message DeleteK8sPolicyRequest {
  // The resource to be deleted will be defined by 
  // \"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\"
  // from the request body.
  ReporterData reporter_data = 1 [  json_name = "reporter_data", (buf.validate.field).required = true ];
}

message DeleteK8sPolicyResponse {}

service KesselK8sPolicyService {
  rpc CreateK8sPolicy(CreateK8sPolicyRequest) returns (CreateK8sPolicyResponse) {
    option (google.api.http) = {
      post : "/api/inventory/v1beta1/resources/k8s-policies"
      body : "*"
    };
  };

  rpc UpdateK8sPolicy(UpdateK8sPolicyRequest) returns (UpdateK8sPolicyResponse) {
    option (google.api.http) = {
      put : "/api/inventory/v1beta1/resources/k8s-policies"
      body : "*"
    };
  };

  rpc DeleteK8sPolicy(DeleteK8sPolicyRequest) returns (DeleteK8sPolicyResponse) {
    option (google.api.http) = {
      delete : "/api/inventory/v1beta1/resources/k8s-policies"
      body : "*"
    };
  };
}
