syntax = "proto3";

package kessel.inventory.v1beta1;

import "google/api/annotations.proto";
import "validate/validate.proto";

import "kessel/inventory/v1beta1/rhel_host.proto";

option go_package = "github.com/project-kessel/inventory-api/api/kessel/inventory/v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1";

message CreateRhelHostRequest {
  // The Rhel Host to create in Kessel Asset Inventory
  RhelHost rhel_host = 1 [ (validate.rules).message.required = true ];
}

message CreateRhelHostResponse {}

message UpdateRhelHostRequest {
  // A resource instance using the format:
  // \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
  string resource = 1 [ (validate.rules).string.min_len = 1 ];
  // The Rhel host to update
  RhelHost rhel_host = 2 [ (validate.rules).message.required = true ];
}

message UpdateRhelHostResponse {}

message DeleteRhelHostRequest {
  // A resource instance using the format:
  // \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
  string resource = 1 [ (validate.rules).string.min_len = 1 ];
}

message DeleteRhelHostResponse {}

service KesselRhelHostService {
  rpc CreateRhelHost(CreateRhelHostRequest) returns (CreateRhelHostResponse) {
    option (google.api.http) = {
      post : "/api/inventory/v1beta1/rhel-hosts"
      body : "*"
    };
  };

  rpc UpdateRhelHost(UpdateRhelHostRequest) returns (UpdateRhelHostResponse) {
    option (google.api.http) = {
      put : "/api/inventory/v1beta1/rhel-hosts/{resource}"
      body : "*"
    };
  };

  rpc DeleteRhelHost(DeleteRhelHostRequest) returns (DeleteRhelHostResponse) {
    option (google.api.http) = {
      delete : "/api/inventory/v1beta1/rhel-hosts/{resource}"
    };
  };
}
