apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: inventory
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: inventory-api-config
    data:
      inventory-api-config.yaml: |
        storage:
          max-serialization-retries: 10
        authn:
          allow-unauthenticated: true
        authz:
          kessel:
            insecure-client: true
            enable-oidc-auth: false
        consumer:
          enabled: true
          topic: outbox.event.kessel.tuples
          retry-options:
            consumer-max-retries: -1
            operation-max-retries: -1
            backoff-factor: 5
            max-backoff-seconds: 30
          auth:
            enabled: false
        consistency:
          read-after-write-enabled: true # false == off for all service providers
          read-after-write-allowlist: ["*"] # specify ["*"] to allow any request to optionally r-a-w
        service:
          use_v1beta2_db: true
        log:
          level: "info"
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: resources-tarball
    binaryData:
      resources.tar.gz: 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
  - apiVersion: kafka.strimzi.io/v1beta2
    kind: KafkaConnect
    metadata:
      annotations:
        strimzi.io/use-connector-resources: "true"
      name: kessel-kafka-connect
    spec:
      bootstrapServers: ${ENV_NAME}-kafka-bootstrap:9092
      config:
        config.storage.replication.factor: ${CONFIG_STORAGE_REPLICATION_FACTOR}
        config.storage.topic: kessel-kafka-connect-cluster-configs
        connector.client.config.override.policy: All
        group.id: kessel-kafka-connect-cluster
        offset.storage.replication.factor: ${OFFSET_STORAGE_REPLICATION_FACTOR}
        offset.storage.topic: kessel-kafka-connect-cluster-offsets
        status.storage.replication.factor: ${STATUS_STORAGE_REPLICATION_FACTOR}
        status.storage.topic: kessel-kafka-connect-cluster-status
        config.providers: secrets
        config.providers.secrets.class: io.strimzi.kafka.KubernetesSecretConfigProvider
      image: ${KAFKA_CONNECT_IMAGE}
      replicas: ${{CONNECT_REPLICAS}}
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      template:
        pod:
          imagePullSecrets:
            - name: quay-cloudservices-pull
      version: ${VERSION}
  - apiVersion: kafka.strimzi.io/v1beta2
    kind: KafkaConnector
    metadata:
      name: kessel-inventory-source-connector
      labels:
        strimzi.io/cluster: kessel-kafka-connect
    spec:
      class: io.debezium.connector.postgresql.PostgresConnector
      tasksMax: ${{MAX_TASKS}}
      config:
        slot.name: kessel_inventory_debezium
        database.server.name: kessel-inventory-db
        database.dbname: ${secrets:kessel-inventory-db:db.name}
        database.hostname: ${secrets:kessel-inventory-db:db.host}
        database.port: ${secrets:kessel-inventory-db:db.port}
        database.user: ${secrets:kessel-inventory-db:db.user}
        database.password: ${secrets:kessel-inventory-db:db.password}
        topic.prefix: kessel-inventory
        table.include.list: public.outbox_events
        transforms: outbox
        transforms.outbox.type: io.debezium.transforms.outbox.EventRouter
        transforms.outbox.table.fields.additional.placement: operation:header, txid:header
        transforms.outbox.table.expand.json.payload: true
        value.converter: org.apache.kafka.connect.json.JsonConverter
        plugin.name: pgoutput
        heartbeat.interval.ms: ${DEBEZIUM_HEARTBEAT_INTERVAL_MS}
        heartbeat.action.query: ${DEBEZIUM_ACTION_QUERY}
        topic.heartbeat.prefix: ${TOPIC_HEARTBEAT_PREFIX}
        poll.interval.ms: ${DEBEZIUM_POLL_INTERVAL_MS}
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: kessel-inventory
    spec:
      envName: ${ENV_NAME}
      database:
        name: kessel-inventory
        version: 16
      kafkaTopics:
        - topicName: outbox.event.kessel.tuples
          partitions: 1
          replicas: 3
        - topicName: outbox.event.kessel.resources
          partitions: 1
          replicas: 3
      optionalDependencies:
        - kessel-relations
      deployments:
        - name: api
          replicas: ${{REPLICAS}}
          podSpec:
            initContainers:
              - name: copy-resources
                image: registry.access.redhat.com/ubi9
                imagePullPolicy: Always
                command:
                  - /bin/sh
                  - "-c"
                  - |
                    echo "Extracting resources from tarball..."
                    tar -xzf /mnt/resources/resources.tar.gz -C /data/schema/resources
                    echo "Extraction complete!"
                volumeMounts:
                  - name: resources-tarball
                    mountPath: "/mnt/resources"
                  - name: resource-volume
                    mountPath: "/data/schema/resources"
              - name: migration
                image: ${INVENTORY_IMAGE}:${IMAGE_TAG}
                imagePullPolicy: Always
                command: ["inventory-api"]
                args: ["migrate"]
                inheritEnv: true
            image: ${INVENTORY_IMAGE}:${IMAGE_TAG}
            imagePullPolicy: Always
            command: ["inventory-api"]
            args: ["serve"]
            livenessProbe:
              httpGet:
                path: /api/inventory/v1/livez
                port: 8000
            readinessProbe:
              httpGet:
                path: /api/inventory/v1/readyz
                port: 8000
            env:
              - name: CLOWDER_ENABLED
                value: "true"
              - name: INVENTORY_API_CONFIG
                value: "/inventory/inventory-api-config.yaml"
              - name: PGDATA
                value: /temp/data
              - name: RESOURCE_DIR
                value: "/data/schema/resources"
            volumeMounts:
              - name: config-volume
                mountPath: "/inventory"
              - name: resource-volume
                mountPath: "/data/schema/resources"
              - name: resources-tarball
                mountPath: "/mnt/resources"
            volumes:
              - name: config-volume
                configMap:
                  name: inventory-api-config
              - name: resource-volume
                emptyDir: {}
              - name: resources-tarball
                configMap:
                  name: resources-tarball
          webServices:
            public:
              enabled: true
              apiPath: inventory
      testing:
        iqePlugin: kessel-inventory
parameters:
  - description: ClowdEnvironment name (ephemeral, stage, prod)
    name: ENV_NAME
    required: true
  - description: App Image
    name: INVENTORY_IMAGE
    value: quay.io/redhat-services-prod/project-kessel-tenant/kessel-inventory/inventory-api
  - description: Image Tag
    name: IMAGE_TAG
    required: true
    value: latest
  - description: Number of replicas
    name: REPLICAS
    value: "1"
  - name: MAX_TASKS
    value: "1"
    description: How many tasks the Kafka Connect instance can create to process this Connector's work
  - name: TOPIC_HEARTBEAT_PREFIX
    value: debezium-heartbeat
    description: Prefix for the connector heartbeat topic
  - name: DEBEZIUM_ACTION_QUERY
    value: "SELECT pg_logical_emit_message(false, 'heartbeat', now()::varchar);"
    description: Query action that runs for each heartbeat event
  - name: DEBEZIUM_HEARTBEAT_INTERVAL_MS
    value: "300000"
    description: The interval for the Debezium heartbeat in ms
  - name: DEBEZIUM_POLL_INTERVAL_MS
    value: "250"
    description: The interval for the Debezium batch processing
  - name: CONFIG_STORAGE_REPLICATION_FACTOR
    description: Replication factor for the topic where connector configurations are stored
    value: "1"
  - name: OFFSET_STORAGE_REPLICATION_FACTOR
    description: Replication factor for the topic where source connector offsets are store
    value: "1"
  - name: STATUS_STORAGE_REPLICATION_FACTOR
    description: Replication factor for the topic where connector and task status are stored
    value: "1"
  - name: KAFKA_CONNECT_IMAGE
    value: quay.io/redhat-services-prod/project-kessel-tenant/kessel-kafka-connect:latest
    description: Container image name for the connect cluster pods
  - name: CONNECT_REPLICAS
    description: Number of replicas in the connect cluster
    value: "1"
  - name: VERSION
    description: Kafka Connect version to use (should match the Kafka version of cluster and connect base image)
    value: "3.9.0"
