apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: inventory
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: postgres-secret
    stringData:
      POSTGRESQL_DATABASE: authz
      POSTGRESQL_USER: authz
      POSTGRESQL_PASSWORD: SuperSecretPassword

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: inventory-api-config
    data:
      inventory-api-config.yaml: |
        server:
          http:
            address: 0.0.0.0:8000
          grpc:
            address: 0.0.0.0:9000
        authn:
          psk:
            pre-shared-key-file: /psks/psks.yaml
        authz:
          impl: allow-all
        eventing:
          eventer: stdout
          kafka:
        storage:
          database: postgres
          sqlite3:
            dsn: inventory.db
          postgres:
            host: "invpostgres"
            port: "5432"
            user: "authz"
            password: "SuperSecretPassword"
            dbname: "authz"

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: psks
    data:
      psks.yaml: |
        "1234":
          tenant: "Example"
          principal: "user@example.com"
          is_reporter: true
          type: "REPORTER_TYPE_ACM"

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: invpostgres
      name: invpostgres
    spec:
      selector:
        matchLabels:
          app: invpostgres
      template:
        metadata:
          labels:
            app: invpostgres
        spec:
          containers:
          - env:
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRESQL_DATABASE
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRESQL_USER
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRESQL_PASSWORD
            - name: PGDATA
              value: /temp/data
            image: registry.redhat.io/rhel9/postgresql-15:1-54
            imagePullPolicy: Always
            name: postgres
            ports:
            - containerPort: 5432
              protocol: TCP
            resources:
              limits:
                cpu: 60m
                memory: 256Mi
              requests:
                cpu: 30m
                memory: 128Mi
          restartPolicy: Always

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: invpostgres
      name: invpostgres
    spec:
      ports:
      - name: http
        port: 5432
        protocol: TCP
      selector:
        app: invpostgres

  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: kessel-inventory
    spec:
      envName: ${ENV_NAME}
#      testing:
#        iqePlugin: inventory_api
      deployments:
        - name: api
          replicas: 1
          podSpec:
            initContainers:
            - name: migration
              image: ${INVENTORY_IMAGE}:${INVENTORY_IMAGE_TAG}
              command: ["inventory-api"]
              args: ["migrate"]
              inheritEnv: true
            image: ${INVENTORY_IMAGE}:${INVENTORY_IMAGE_TAG}
            command: ["inventory-api"]
            args: ["serve"]
            livenessProbe:
              httpGet:
                path: /api/inventory/v1/livez
                port: 8000
            readinessProbe:
              httpGet:
                path: /api/inventory/v1/readyz
                port: 8000
            env:
            - name: INVENTORY_API_CONFIG
              value: "/inventory/inventory-api-config.yaml"
            volumeMounts:
                - name: config-volume
                  mountPath: "/inventory"
                - name: psks-volume
                  mountPath: /psks
            volumes:
              - name: config-volume
                configMap:
                  name: inventory-api-config
              - name: psks-volume
                configMap:
                  name: psks
          webServices:
            public:
              enabled: true
              apiPath: inventory
parameters:
  - description: ClowdEnvironment name (ephemeral, stage, prod)
    name: ENV_NAME
    required: true
  - description: App Image
    name: INVENTORY_IMAGE
    value: quay.io/redhat-services-prod/project-kessel-tenant/kessel-inventory/inventory-api
  - description: Image Tag
    name: INVENTORY_IMAGE_TAG
    value: latest
