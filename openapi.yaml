# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/inventory/v1/livez:
        get:
            tags:
                - KesselInventoryHealthService
            operationId: KesselInventoryHealthService_GetLivez
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1.GetLivezResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1/readyz:
        get:
            tags:
                - KesselInventoryHealthService
            operationId: KesselInventoryHealthService_GetReadyz
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1.GetReadyzResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/k8sClusters:
        post:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_CreateK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.CreateK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.CreateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/k8sClusters/{resource}:
        put:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_UpdateK8SCluster
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_DeleteK8SCluster
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.DeleteK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/notificationsIntegrations:
        post:
            tags:
                - KesselNotificationsIntegrationService
            operationId: KesselNotificationsIntegrationService_CreateNotificationsIntegration
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.CreateNotificationsIntegrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.CreateNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/notificationsIntegrations/{resource}:
        put:
            tags:
                - KesselNotificationsIntegrationService
            operationId: KesselNotificationsIntegrationService_UpdateNotificationsIntegration
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateNotificationsIntegrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselNotificationsIntegrationService
            operationId: KesselNotificationsIntegrationService_DeleteNotificationsIntegration
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.DeleteNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/policies:
        post:
            tags:
                - KesselPolicyService
            operationId: KesselPolicyService_CreatePolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.CreatePolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.CreatePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/policies/{resource}:
        put:
            tags:
                - KesselPolicyService
            operationId: KesselPolicyService_UpdatePolicy
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdatePolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdatePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselPolicyService
            operationId: KesselPolicyService_DeletePolicy
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.DeletePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/policyRelationships:
        put:
            tags:
                - KesselPolicyRelationshipService
            operationId: KesselPolicyRelationshipService_UpdateResourceRelationshipByUrnHs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateResourceRelationshipByUrnHsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateResourceRelationshipByUrnHsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselPolicyRelationshipService
            operationId: KesselPolicyRelationshipService_CreatePolicyRelationship
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.CreatePolicyRelationshipRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.CreatePolicyRelationshipResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselPolicyRelationshipService
            operationId: KesselPolicyRelationshipService_DeleteResourceRelationshipByUrn
            parameters:
                - name: resources.subject_resource
                  in: query
                  schema:
                    type: string
                - name: resources.object_resource
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.DeleteResourceRelationshipByUrnResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/rhelHosts:
        post:
            tags:
                - KesselRhelHostService
            operationId: KesselRhelHostService_CreateRhelHost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.CreateRhelHostRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.CreateRhelHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/rhelHosts/{resource}:
        put:
            tags:
                - KesselRhelHostService
            operationId: KesselRhelHostService_UpdateRhelHost
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateRhelHostRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateRhelHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselRhelHostService
            operationId: KesselRhelHostService_DeleteRhelHost
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.DeleteRhelHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        kessel.inventory.v1.GetLivezResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.inventory.v1.GetReadyzResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.inventory.v1beta1.CreateK8sClusterRequest:
            type: object
            properties:
                k8s_cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.K8sCluster'
                    description: The k8s cluster to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreateK8sClusterResponse:
            type: object
            properties:
                k8s_cluster:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.K8sCluster'
        kessel.inventory.v1beta1.CreateNotificationsIntegrationRequest:
            type: object
            properties:
                integration:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.NotificationsIntegration'
                    description: The NotificationsIntegration to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreateNotificationsIntegrationResponse:
            type: object
            properties:
                integration:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.NotificationsIntegration'
                    description: The NotificationsIntegration created in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreatePolicyRelationshipRequest:
            type: object
            properties:
                policy_relationship:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.PolicyRelationship'
                    description: The resource relationship to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreatePolicyRelationshipResponse:
            type: object
            properties:
                policy_relationship:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.PolicyRelationship'
                    description: The resource relationship created in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreatePolicyRequest:
            type: object
            properties:
                policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Policy'
                    description: The policy to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreatePolicyResponse:
            type: object
            properties:
                policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Policy'
                    description: The policy created in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreateRhelHostRequest:
            type: object
            properties:
                rhel_host:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.RhelHost'
                    description: The Rhel Host to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.CreateRhelHostResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.DeleteK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.DeleteNotificationsIntegrationResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.DeletePolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.DeleteResourceRelationshipByUrnResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.DeleteRhelHostResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.K8sCluster:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.ReporterData'
                    description: Write only reporter specific data
                resource_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.K8sClusterDetail'
        kessel.inventory.v1beta1.K8sClusterDetail:
            type: object
            properties:
                external_cluster_id:
                    type: string
                    description: The OCP cluster ID or ARN etc for *KS
                cluster_status:
                    type: integer
                    format: enum
                kube_version:
                    type: string
                    description: The version of kubernetes
                kube_vendor:
                    type: integer
                    format: enum
                vendor_version:
                    type: string
                    description: The version of the productized kubernetes distribution
                cloud_platform:
                    type: integer
                    format: enum
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.K8sClusterDetailNodesInner'
        kessel.inventory.v1beta1.K8sClusterDetailNodesInner:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the node (this can contain private info)
                cpu:
                    type: string
                    description: CPU Capacity of the node defined in CPU units, e.g. \"0.5\"
                memory:
                    type: string
                    description: Memory Capacity of the node defined as MiB, e.g. \"50Mi\"
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.ResourceLabel'
                    description: |-
                        Map of string keys and string values that can be used to organize and
                         categorize (scope and select) resources
                         Todo: Do we require at least 1 label?
        kessel.inventory.v1beta1.Metadata:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: Kessel Asset Inventory generated identifier.
                resource_type:
                    readOnly: true
                    type: string
                    description: The type of the Resource
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported.
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated.
                    format: date-time
                first_reported_by:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that first reported on this item.
                last_reported_by:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that last reported on this item.
                workspace:
                    type: string
                    description: |-
                        The workspace in which this resource is a member for access control.  A
                         resource can only be a member of one workspace.
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.ResourceLabel'
        kessel.inventory.v1beta1.NotificationsIntegration:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.ReporterData'
                    description: Write only reporter specific data
        kessel.inventory.v1beta1.Policy:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.ReporterData'
                    description: Write only reporter specific data
                resource_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.PolicyDetail'
        kessel.inventory.v1beta1.PolicyDetail:
            type: object
            properties:
                disabled:
                    type: boolean
                    description: Defines if the policy is currently enabled or disabled across all targets
                severity:
                    type: integer
                    format: enum
        kessel.inventory.v1beta1.PolicyRelationship:
            type: object
            properties:
                relationship_type:
                    type: string
                    description: The type of Resource relationship
                policy_id:
                    type: string
                    description: |-
                        The resource ID assigned to the resource by Kessel Asset Inventory. A
                         reporter alias may also be used as a resource ID using the format:
                         \"hcrn:<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.local_resource_id>\"
                k8s_cluster_id:
                    type: string
                    description: |-
                        The resource ID assigned to the resource by Kessel Asset Inventory. A
                         reporter alias may also be used as a resource ID using the format:
                         \"hcrn:<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.local_resource_id>\"
                status:
                    type: integer
                    format: enum
        kessel.inventory.v1beta1.ReporterData:
            type: object
            properties:
                reporter_type:
                    type: integer
                    format: enum
                reporter_instance_id:
                    readOnly: true
                    type: string
                    description: |-
                        The ID of the instance of the reporter. This is derived from the
                         authentication mechanism, i.e. authentication token.
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported by this reporter
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated by this reporter
                    format: date-time
                console_href:
                    type: string
                    description: |-
                        The URL for this resource in the reporter's management UI console. For
                         example this would be the cluster URL in the HCC Console for an OCM
                         reported cluster.
                api_href:
                    type: string
                    description: Reporter specific API link to the resource.
                local_resource_id:
                    type: string
                    description: |-
                        The ID assigned to this resource by the reporter, for example OCM cluster
                         ID, HBI's host id, or ACM managed cluster name etc.
                reporter_version:
                    type: string
                    description: version of the reporter
        kessel.inventory.v1beta1.ResourceLabel:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        kessel.inventory.v1beta1.RhelHost:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.ReporterData'
                    description: Write only reporter specific data
        kessel.inventory.v1beta1.UpdateK8sClusterRequest:
            type: object
            properties:
                resource:
                    type: string
                    description: |-
                        The {resource} format
                         \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
                k8s_cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.K8sCluster'
                    description: The k8s clsuter to update
        kessel.inventory.v1beta1.UpdateK8sClusterResponse:
            type: object
            properties:
                k8s_cluster:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.K8sCluster'
        kessel.inventory.v1beta1.UpdateNotificationsIntegrationRequest:
            type: object
            properties:
                resource:
                    type: string
                    description: |-
                        A resource instance using the format:
                         \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
                integration:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.NotificationsIntegration'
                    description: The NotificationsIntegration to update
        kessel.inventory.v1beta1.UpdateNotificationsIntegrationResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.UpdatePolicyRequest:
            type: object
            properties:
                resource:
                    type: string
                    description: |-
                        The {resource} format
                         \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
                policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.Policy'
                    description: The Policy to update in Kessel Asset Inventory
        kessel.inventory.v1beta1.UpdatePolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.UpdateResourceRelationshipByUrnHsRequest:
            type: object
            properties:
                resources:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.UpdateResourceRelationshipByUrnHsResourcesParameter'
                    description: |-
                        The subject {resource} and the object {resource}. A relationship is between
                         a Subject and an Object, e.g. a Policy (subject) has a propagated
                         relationship to an k8s cluster (object)
                policy_relationship:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.PolicyRelationship'
                    description: |-
                        Update a resource relationship in Kessel Asset Inventory by the {subject
                         resource, object resource}. A relationship is between a Subject and an
                         Object, e.g. a Policy (subject) has a propagated relationship to an k8s
                         cluster (object).. The {resource} format
                         \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\".
        kessel.inventory.v1beta1.UpdateResourceRelationshipByUrnHsResourcesParameter:
            type: object
            properties:
                subject_resource:
                    type: string
                object_resource:
                    type: string
        kessel.inventory.v1beta1.UpdateResourceRelationshipByUrnHsResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.UpdateRhelHostRequest:
            type: object
            properties:
                resource:
                    type: string
                    description: |-
                        A resource instance using the format:
                         \"<reporter_data.reporter_type>:<reporter_data.local_resource_id>\"
                rhel_host:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.RhelHost'
                    description: The Rhel host to update
        kessel.inventory.v1beta1.UpdateRhelHostResponse:
            type: object
            properties: {}
tags:
    - name: KesselInventoryHealthService
    - name: KesselK8SClusterService
    - name: KesselNotificationsIntegrationService
    - name: KesselPolicyRelationshipService
    - name: KesselPolicyService
    - name: KesselRhelHostService
