# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/inventory/v1/livez:
        get:
            tags:
                - KesselInventoryHealthService
            operationId: KesselInventoryHealthService_GetLivez
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1.GetLivezResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1/readyz:
        get:
            tags:
                - KesselInventoryHealthService
            operationId: KesselInventoryHealthService_GetReadyz
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1.GetReadyzResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resource-relationships/k8s-policy_is-propagated-to_k8s-cluster:
        put:
            tags:
                - KesselK8SPolicyIsPropagatedToK8SClusterService
            operationId: KesselK8SPolicyIsPropagatedToK8SClusterService_UpdateK8SPolicyIsPropagatedToK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselK8SPolicyIsPropagatedToK8SClusterService
            operationId: KesselK8SPolicyIsPropagatedToK8SClusterService_CreateK8SPolicyIsPropagatedToK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SPolicyIsPropagatedToK8SClusterService
            operationId: KesselK8SPolicyIsPropagatedToK8SClusterService_DeleteK8SPolicyIsPropagatedToK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resources/k8s-clusters:
        put:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_UpdateK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_CreateK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_DeleteK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resources/k8s-policies:
        put:
            tags:
                - KesselK8SPolicyService
            operationId: KesselK8SPolicyService_UpdateK8SPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselK8SPolicyService
            operationId: KesselK8SPolicyService_CreateK8SPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SPolicyService
            operationId: KesselK8SPolicyService_DeleteK8SPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resources/notifications-integrations:
        put:
            tags:
                - KesselNotificationsIntegrationService
            operationId: KesselNotificationsIntegrationService_UpdateNotificationsIntegration
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateNotificationsIntegrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselNotificationsIntegrationService
            operationId: KesselNotificationsIntegrationService_CreateNotificationsIntegration
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateNotificationsIntegrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselNotificationsIntegrationService
            operationId: KesselNotificationsIntegrationService_DeleteNotificationsIntegration
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteNotificationsIntegrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resources/rhel-hosts:
        put:
            tags:
                - KesselRhelHostService
            operationId: KesselRhelHostService_UpdateRhelHost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateRhelHostRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateRhelHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselRhelHostService
            operationId: KesselRhelHostService_CreateRhelHost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateRhelHostRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateRhelHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselRhelHostService
            operationId: KesselRhelHostService_DeleteRhelHost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteRhelHostRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteRhelHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        kessel.inventory.v1.GetLivezResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.inventory.v1.GetReadyzResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterRequest:
            type: object
            properties:
                k8s-policy_is-propagated-to_k8s-cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SCluster'
                    description: The resource relationship to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.ReporterData'
                    description: "The resource-relationship to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.subject_local_resource_id>\\\"\n AND \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.object_local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SCluster:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.ReporterData'
                    description: Write only reporter specific data
                relationship_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SClusterDetail'
        kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SClusterDetail:
            type: object
            properties:
                k8s_policy_id:
                    readOnly: true
                    type: string
                    description: The resource ID assigned to the resource by Kessel Asset Inventory.
                k8s_cluster_id:
                    readOnly: true
                    type: string
                    description: The resource ID assigned to the resource by Kessel Asset Inventory.
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_OTHER
                        - VIOLATIONS
                        - NO_VIOLATIONS
                    type: string
                    format: enum
        kessel.inventory.v1beta1.relationships.Metadata:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: Kessel Asset Inventory generated identifier.
                relationship_type:
                    readOnly: true
                    type: string
                    description: The type of Resource relationship
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported.
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated.
                    format: date-time
                first_reported_by:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that first reported on this item.
                last_reported_by:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that last reported on this item.
        kessel.inventory.v1beta1.relationships.ReporterData:
            type: object
            properties:
                reporter_type:
                    enum:
                        - REPORTER_TYPE_UNSPECIFIED
                        - REPORTER_TYPE_OTHER
                        - ACM
                        - HBI
                        - OCM
                        - NOTIFICATIONS
                    type: string
                    format: enum
                reporter_instance_id:
                    readOnly: true
                    type: string
                    description: |-
                        The ID of the instance of the reporter. This is derived from the
                         authentication mechanism, i.e. authentication token.
                reporter_version:
                    type: string
                    description: version of the reporter
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported by this reporter
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated by this reporter
                    format: date-time
                subject_local_resource_id:
                    type: string
                    description: "The ID assigned by the reporter to resource which is the subject of the relationship. For example \n OCM cluster ID, HBI's host id, or ACM managed cluster name etc."
                object_local_resource_id:
                    type: string
                    description: "The ID assigned by the reporter to resource which is the object of the relationship. For example \n OCM cluster ID, HBI's host id, or ACM managed cluster name etc."
        kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterRequest:
            type: object
            properties:
                k8s-policy_is-propagated-to_k8s-cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SCluster'
                    description: "The resource-relationship to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.subject_local_resource_id>\\\"\n AND \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.object_local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.CreateK8sClusterRequest:
            type: object
            properties:
                k8s_cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sCluster'
                    description: The k8s cluster to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.resources.CreateK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.CreateK8sPolicyRequest:
            type: object
            properties:
                k8s_policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sPolicy'
                    description: The policy to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.resources.CreateK8sPolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.CreateNotificationsIntegrationRequest:
            type: object
            properties:
                integration:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.NotificationsIntegration'
                    description: The NotificationsIntegration to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.resources.CreateNotificationsIntegrationResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.CreateRhelHostRequest:
            type: object
            properties:
                rhel_host:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.RhelHost'
                    description: The Rhel Host to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.resources.CreateRhelHostResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.DeleteK8sClusterRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: "The resource to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\" \n from the request body."
        kessel.inventory.v1beta1.resources.DeleteK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.DeleteK8sPolicyRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: "The resource to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.DeleteK8sPolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.DeleteNotificationsIntegrationRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: "The resource to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.DeleteNotificationsIntegrationResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.DeleteRhelHostRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.DeleteRhelHostResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.K8sCluster:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: Write only reporter specific data
                resource_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sClusterDetail'
        kessel.inventory.v1beta1.resources.K8sClusterDetail:
            type: object
            properties:
                external_cluster_id:
                    type: string
                    description: The OCP cluster ID or ARN etc for *KS
                cluster_status:
                    enum:
                        - CLUSTER_STATUS_UNSPECIFIED
                        - CLUSTER_STATUS_OTHER
                        - READY
                        - FAILED
                        - OFFLINE
                    type: string
                    format: enum
                kube_version:
                    type: string
                    description: The version of kubernetes
                kube_vendor:
                    enum:
                        - KUBE_VENDOR_UNSPECIFIED
                        - KUBE_VENDOR_OTHER
                        - AKS
                        - EKS
                        - IKS
                        - OPENSHIFT
                        - GKE
                    type: string
                    format: enum
                vendor_version:
                    type: string
                    description: The version of the productized kubernetes distribution
                cloud_platform:
                    enum:
                        - CLOUD_PLATFORM_UNSPECIFIED
                        - CLOUD_PLATFORM_OTHER
                        - NONE_UPI
                        - BAREMETAL_IPI
                        - BAREMETAL_UPI
                        - AWS_IPI
                        - AWS_UPI
                        - AZURE_IPI
                        - AZURE_UPI
                        - IBMCLOUD_IPI
                        - IBMCLOUD_UPI
                        - KUBEVIRT_IPI
                        - OPENSTACK_IPI
                        - OPENSTACK_UPI
                        - GCP_IPI
                        - GCP_UPI
                        - NUTANIX_IPI
                        - NUTANIX_UPI
                        - VSPHERE_IPI
                        - VSPHERE_UPI
                        - OVIRT_IPI
                    type: string
                    format: enum
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sClusterDetailNodesInner'
        kessel.inventory.v1beta1.resources.K8sClusterDetailNodesInner:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the node (this can contain private info)
                cpu:
                    type: string
                    description: CPU Capacity of the node defined in CPU units, e.g. \"0.5\"
                memory:
                    type: string
                    description: Memory Capacity of the node defined as MiB, e.g. \"50Mi\"
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ResourceLabel'
                    description: |-
                        Map of string keys and string values that can be used to organize and
                         categorize (scope and select) resources
                         Todo: Do we require at least 1 label?
        kessel.inventory.v1beta1.resources.K8sPolicy:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: Write only reporter specific data
                resource_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sPolicyDetail'
        kessel.inventory.v1beta1.resources.K8sPolicyDetail:
            type: object
            properties:
                disabled:
                    type: boolean
                    description: Defines if the policy is currently enabled or disabled across all targets
                severity:
                    enum:
                        - SEVERITY_UNSPECIFIED
                        - SEVERITY_OTHER
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                    type: string
                    format: enum
        kessel.inventory.v1beta1.resources.Metadata:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: Kessel Asset Inventory generated identifier.
                resource_type:
                    readOnly: true
                    type: string
                    description: The type of the Resource
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported.
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated.
                    format: date-time
                first_reported_by:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that first reported on this item.
                last_reported_by:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that last reported on this item.
                workspace:
                    type: string
                    description: |-
                        The workspace in which this resource is a member for access control.  A
                         resource can only be a member of one workspace.
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ResourceLabel'
        kessel.inventory.v1beta1.resources.NotificationsIntegration:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: Write only reporter specific data
        kessel.inventory.v1beta1.resources.ReporterData:
            type: object
            properties:
                reporter_type:
                    enum:
                        - REPORTER_TYPE_UNSPECIFIED
                        - REPORTER_TYPE_OTHER
                        - ACM
                        - HBI
                        - OCM
                        - NOTIFICATIONS
                    type: string
                    format: enum
                reporter_instance_id:
                    readOnly: true
                    type: string
                    description: |-
                        The ID of the instance of the reporter. This is derived from the
                         authentication mechanism, i.e. authentication token.
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported by this reporter
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated by this reporter
                    format: date-time
                console_href:
                    type: string
                    description: |-
                        The URL for this resource in the reporter's management UI console. For
                         example this would be the cluster URL in the HCC Console for an OCM
                         reported cluster.
                api_href:
                    type: string
                    description: Reporter specific API link to the resource.
                local_resource_id:
                    type: string
                    description: |-
                        The ID assigned to this resource by the reporter, for example OCM cluster
                         ID, HBI's host id, or ACM managed cluster name etc.
                reporter_version:
                    type: string
                    description: version of the reporter
        kessel.inventory.v1beta1.resources.ResourceLabel:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        kessel.inventory.v1beta1.resources.RhelHost:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: Write only reporter specific data
        kessel.inventory.v1beta1.resources.UpdateK8sClusterRequest:
            type: object
            properties:
                k8s_cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sCluster'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.UpdateK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.UpdateK8sPolicyRequest:
            type: object
            properties:
                k8s_policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sPolicy'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.UpdateK8sPolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.UpdateNotificationsIntegrationRequest:
            type: object
            properties:
                integration:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.NotificationsIntegration'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.UpdateNotificationsIntegrationResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.UpdateRhelHostRequest:
            type: object
            properties:
                rhel_host:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.RhelHost'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.UpdateRhelHostResponse:
            type: object
            properties: {}
tags:
    - name: KesselInventoryHealthService
    - name: KesselK8SClusterService
    - name: KesselK8SPolicyIsPropagatedToK8SClusterService
    - name: KesselK8SPolicyService
    - name: KesselNotificationsIntegrationService
    - name: KesselRhelHostService
