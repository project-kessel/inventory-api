# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/inventory/v1/livez:
        get:
            tags:
                - KesselInventoryHealthService
            operationId: KesselInventoryHealthService_GetLivez
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1.GetLivezResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1/readyz:
        get:
            tags:
                - KesselInventoryHealthService
            operationId: KesselInventoryHealthService_GetReadyz
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1.GetReadyzResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/authz/check:
        post:
            tags:
                - KesselCheckService
            description: "Checks for the existence of a single Relationship \n (a Relation between a Resource and a Subject or Subject Set)."
            operationId: KesselCheckService_Check
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.CheckRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.CheckResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/authz/checkforupdate:
        post:
            tags:
                - KesselCheckService
            operationId: KesselCheckService_CheckForUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.CheckForUpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.CheckForUpdateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resource-relationships/k8s-policy_is-propagated-to_k8s-cluster:
        put:
            tags:
                - KesselK8SPolicyIsPropagatedToK8SClusterService
            operationId: KesselK8SPolicyIsPropagatedToK8SClusterService_UpdateK8SPolicyIsPropagatedToK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselK8SPolicyIsPropagatedToK8SClusterService
            operationId: KesselK8SPolicyIsPropagatedToK8SClusterService_CreateK8SPolicyIsPropagatedToK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SPolicyIsPropagatedToK8SClusterService
            operationId: KesselK8SPolicyIsPropagatedToK8SClusterService_DeleteK8SPolicyIsPropagatedToK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resources/k8s-clusters:
        put:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_UpdateK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_CreateK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SClusterService
            operationId: KesselK8SClusterService_DeleteK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sClusterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta1/resources/k8s-policies:
        put:
            tags:
                - KesselK8SPolicyService
            operationId: KesselK8SPolicyService_UpdateK8SPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.UpdateK8sPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - KesselK8SPolicyService
            operationId: KesselK8SPolicyService_CreateK8SPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.CreateK8sPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselK8SPolicyService
            operationId: KesselK8SPolicyService_DeleteK8SPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.DeleteK8sPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta2/check:
        post:
            tags:
                - KesselInventoryService
            description: |-
                Performs an relationship check to determine whether a subject has a specific
                 permission or relationship on a resource.

                 This API evaluates whether the provided subject is a member of the specified relation
                 (e.g., "viewer", "editor", "admin") on the target object. It answers the question:
                 "Does subject *X* have relation *Y* on object *Z*?"

                 Common use cases include enforcing read access, conditional UI visibility,
                 or authorization gating for downstream API calls.
            operationId: KesselInventoryService_Check
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta2.CheckRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta2.CheckResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta2/checkforupdate:
        post:
            tags:
                - KesselInventoryService
            description: |-
                Performs a strongly consistent relationship check to determine whether a subject
                 has a specific relation to an object (representing, for example, a permission).

                 This API answers the question:
                 "Is subject *X* currently authorized to update or modify resource *Y*?"
                 Unlike the basic `Check` endpoint, this method guarantees a fully up-to-date
                 view of the relationship state (e.g., not relying on cached or eventually consistent data).

                 It is intended to be used just prior to sensitive operation (e.g., update, delete)
                 which depend on the current state of the relationship.
            operationId: KesselInventoryService_CheckForUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta2.CheckForUpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta2.CheckForUpdateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /api/inventory/v1beta2/resources:
        post:
            tags:
                - KesselInventoryService
            description: |-
                Reports to Kessel Inventory that a Resource has been created or has been updated.

                 Reporters can use this API to report facts about their resources in order to
                 facilitate integration, correlation, and access control.

                 Each call can include:
                 - Reporter-specific attributes and relationships (`representations.reporter`)
                 - Shared attributes and relationships common to all reporters (`representations.common`)
                 - Identifiers and metadata that allow correlation to an existing resource

                 Multiple reporters may report representations for the same resource.
                 Kessel Inventory correlates these
                 based on correlation keys provided for a given resource type

                 All versions of your reported facts will be retained and can be queried as needed

                 The relationships reported through this API are used to determine relationship check outcomes
                 via the Check and CheckForUpdate APIs.

                 Reporters are responsible for ensuring delivery guarantees and message ordering
                 appropriate to the sensitivity and consistency needs of their use case.

                 This API does **not** guarantee immediate read-your-writes consistency by default.
                  If a reporter requires newly submitted resources or relationships to be visible
                 in subsequent checks (e.g., `Check`), the request must explicitly set
                 `write_visibility = IMMEDIATE`.
            operationId: KesselInventoryService_ReportResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta2.ReportResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta2.ReportResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - KesselInventoryService
            description: |-
                Reports to Kessel Inventory that a Reporter's representation of a Resource has been deleted.

                 This operation is typically used when a resource has been decommissioned or
                 is no longer reported by any authorized system.

                 As a result, relationship checks performed via the `Check` and
                 `CheckForUpdate` APIs will no longer resolve positively for the deleted
                 resource. Any decisions that depend on relationships tied to
                 this resource will be affected.

                 As an example, it can revoke previously granted access across the system.
            operationId: KesselInventoryService_DeleteResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kessel.inventory.v1beta2.DeleteResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kessel.inventory.v1beta2.DeleteResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        kessel.inventory.v1.GetLivezResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.inventory.v1.GetReadyzResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        kessel.inventory.v1beta1.authz.CheckForUpdateRequest:
            type: object
            properties:
                parent:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.ObjectReference'
                    description: |-
                        Required parameters (from an authz perspective)
                         - resource type and id
                         - permission (cannot be derived from type as types may have multiple edit permissions Ex: https://github.com/RedHatInsights/rbac-config/blob/master/configs/prod/schemas/src/notifications.ksl#L37)
                         - user (possibly derived from an identity token)
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.SubjectReference'
        kessel.inventory.v1beta1.authz.CheckForUpdateResponse:
            type: object
            properties:
                allowed:
                    enum:
                        - ALLOWED_UNSPECIFIED
                        - ALLOWED_TRUE
                        - ALLOWED_FALSE
                    type: string
                    format: enum
        kessel.inventory.v1beta1.authz.CheckRequest:
            type: object
            properties:
                parent:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.ObjectReference'
                    description: |-
                        Required parameters (from an authz perspective)
                         - resource type and id
                         - permission (cannot be derived from the type as a type may have multiple 'read' permissions. Ex: https://github.com/RedHatInsights/rbac-config/blob/master/configs/prod/schemas/src/notifications.ksl#L31)
                         - user (possibly derived from an identity token)
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.SubjectReference'
        kessel.inventory.v1beta1.authz.CheckResponse:
            type: object
            properties:
                allowed:
                    enum:
                        - ALLOWED_UNSPECIFIED
                        - ALLOWED_TRUE
                        - ALLOWED_FALSE
                    type: string
                    format: enum
        kessel.inventory.v1beta1.authz.ObjectReference:
            type: object
            properties:
                type:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.ObjectType'
                id:
                    type: string
        kessel.inventory.v1beta1.authz.ObjectType:
            type: object
            properties:
                namespace:
                    type: string
                name:
                    type: string
        kessel.inventory.v1beta1.authz.SubjectReference:
            type: object
            properties:
                relation:
                    type: string
                    description: |-
                        An optional relation which points to a set of Subjects instead of the single Subject.
                         e.g. "members" or "owners" of a group identified in `subject`.
                subject:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.authz.ObjectReference'
            description: A reference to a Subject or, if a `relation` is provided, a Subject Set.
        kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterRequest:
            type: object
            properties:
                k8s-policy_is-propagated-to_k8s-cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SCluster'
                    description: The resource relationship to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.relationships.CreateK8SPolicyIsPropagatedToK8SClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.ReporterData'
                    description: "The resource-relationship to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.subject_local_resource_id>\\\"\n AND \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.object_local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.relationships.DeleteK8SPolicyIsPropagatedToK8SClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SCluster:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.ReporterData'
                    description: Write only reporter specific data
                relationship_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SClusterDetail'
        kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SClusterDetail:
            type: object
            properties:
                k8s_policy_id:
                    readOnly: true
                    type: string
                    description: The resource ID assigned to the resource by Kessel Asset Inventory.
                k8s_cluster_id:
                    readOnly: true
                    type: string
                    description: The resource ID assigned to the resource by Kessel Asset Inventory.
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_OTHER
                        - VIOLATIONS
                        - NO_VIOLATIONS
                    type: string
                    format: enum
        kessel.inventory.v1beta1.relationships.Metadata:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: Kessel Asset Inventory generated identifier.
                relationship_type:
                    readOnly: true
                    type: string
                    description: The type of Resource relationship
                created_at:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported.
                    format: date-time
                updated_at:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated.
                    format: date-time
                deleted_at:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was deleted.
                    format: date-time
                org_id:
                    type: string
                    description: |-
                        The org id in which this resource is a member for access control.  A
                         resource can only be a member of one org.
        kessel.inventory.v1beta1.relationships.ReporterData:
            type: object
            properties:
                reporter_type:
                    enum:
                        - REPORTER_TYPE_UNSPECIFIED
                        - REPORTER_TYPE_OTHER
                        - ACM
                        - HBI
                        - OCM
                        - NOTIFICATIONS
                    type: string
                    format: enum
                reporter_instance_id:
                    readOnly: true
                    type: string
                    description: |-
                        The ID of the instance of the reporter. This is derived from the
                         authentication mechanism, i.e. authentication token.
                reporter_version:
                    type: string
                    description: version of the reporter
                first_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported by this reporter
                    format: date-time
                last_reported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated by this reporter
                    format: date-time
                subject_local_resource_id:
                    type: string
                    description: "The ID assigned by the reporter to resource which is the subject of the relationship. For example \n OCM cluster ID, HBI's host id, or ACM managed cluster name etc."
                object_local_resource_id:
                    type: string
                    description: "The ID assigned by the reporter to resource which is the object of the relationship. For example \n OCM cluster ID, HBI's host id, or ACM managed cluster name etc."
        kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterRequest:
            type: object
            properties:
                k8s-policy_is-propagated-to_k8s-cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.relationships.K8SPolicyIsPropagatedToK8SCluster'
                    description: "The resource-relationship to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.subject_local_resource_id>\\\"\n AND \\\"<reporter_data.reporter_type>:<reporter_instance_id>:<reporter_data.object_local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.relationships.UpdateK8SPolicyIsPropagatedToK8SClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.CreateK8sClusterRequest:
            type: object
            properties:
                k8s_cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sCluster'
                    description: The k8s cluster to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.resources.CreateK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.CreateK8sPolicyRequest:
            type: object
            properties:
                k8s_policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sPolicy'
                    description: The policy to create in Kessel Asset Inventory
        kessel.inventory.v1beta1.resources.CreateK8sPolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.DeleteK8sClusterRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: "The resource to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\" \n from the request body."
        kessel.inventory.v1beta1.resources.DeleteK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.DeleteK8sPolicyRequest:
            type: object
            properties:
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: "The resource to be deleted will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.DeleteK8sPolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.K8sCluster:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: Write only reporter specific data
                resource_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sClusterDetail'
        kessel.inventory.v1beta1.resources.K8sClusterDetail:
            type: object
            properties:
                external_cluster_id:
                    type: string
                    description: The OCP cluster ID or ARN etc for *KS
                cluster_status:
                    enum:
                        - CLUSTER_STATUS_UNSPECIFIED
                        - CLUSTER_STATUS_OTHER
                        - READY
                        - FAILED
                        - OFFLINE
                    type: string
                    format: enum
                cluster_reason:
                    type: string
                kube_version:
                    type: string
                    description: The version of kubernetes
                kube_vendor:
                    enum:
                        - KUBE_VENDOR_UNSPECIFIED
                        - KUBE_VENDOR_OTHER
                        - AKS
                        - EKS
                        - IKS
                        - OPENSHIFT
                        - GKE
                    type: string
                    format: enum
                vendor_version:
                    type: string
                    description: The version of the productized kubernetes distribution
                cloud_platform:
                    enum:
                        - CLOUD_PLATFORM_UNSPECIFIED
                        - CLOUD_PLATFORM_OTHER
                        - NONE_UPI
                        - BAREMETAL_IPI
                        - BAREMETAL_UPI
                        - AWS_IPI
                        - AWS_UPI
                        - AZURE_IPI
                        - AZURE_UPI
                        - IBMCLOUD_IPI
                        - IBMCLOUD_UPI
                        - KUBEVIRT_IPI
                        - OPENSTACK_IPI
                        - OPENSTACK_UPI
                        - GCP_IPI
                        - GCP_UPI
                        - NUTANIX_IPI
                        - NUTANIX_UPI
                        - VSPHERE_IPI
                        - VSPHERE_UPI
                        - OVIRT_IPI
                    type: string
                    format: enum
                nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sClusterDetailNodesInner'
        kessel.inventory.v1beta1.resources.K8sClusterDetailNodesInner:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the node (this can contain private info)
                cpu:
                    type: string
                    description: CPU Capacity of the node defined in CPU units, e.g. \"0.5\"
                memory:
                    type: string
                    description: Memory Capacity of the node defined as MiB, e.g. \"50Mi\"
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ResourceLabel'
                    description: |-
                        Map of string keys and string values that can be used to organize and
                         categorize (scope and select) resources
                         Todo: Do we require at least 1 label?
        kessel.inventory.v1beta1.resources.K8sPolicy:
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.Metadata'
                    description: Metadata about this resource
                reporter_data:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ReporterData'
                    description: Write only reporter specific data
                resource_data:
                    $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sPolicyDetail'
        kessel.inventory.v1beta1.resources.K8sPolicyDetail:
            type: object
            properties:
                disabled:
                    type: boolean
                    description: Defines if the policy is currently enabled or disabled across all targets
                severity:
                    enum:
                        - SEVERITY_UNSPECIFIED
                        - SEVERITY_OTHER
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                    type: string
                    format: enum
        kessel.inventory.v1beta1.resources.Metadata:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: Kessel Asset Inventory generated identifier.
                resource_type:
                    readOnly: true
                    type: string
                    description: The type of the Resource
                created_at:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported.
                    format: date-time
                updated_at:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated.
                    format: date-time
                deleted_at:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was deleted.
                    format: date-time
                org_id:
                    type: string
                    description: |-
                        The org id in which this resource is a member for access control.  A
                         resource can only be a member of one org.
                workspace_id:
                    type: string
                    description: |-
                        The workspace id in which this resource is a member for access control.  A
                         resource can only be a member of one workspace.
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.ResourceLabel'
        kessel.inventory.v1beta1.resources.ReporterData:
            type: object
            properties:
                reporter_type:
                    enum:
                        - REPORTER_TYPE_UNSPECIFIED
                        - REPORTER_TYPE_OTHER
                        - ACM
                        - HBI
                        - OCM
                        - NOTIFICATIONS
                    type: string
                    format: enum
                reporter_instance_id:
                    readOnly: true
                    type: string
                    description: |-
                        The ID of the instance of the reporter. This is derived from the
                         authentication mechanism, i.e. authentication token.
                console_href:
                    type: string
                    description: |-
                        The URL for this resource in the reporter's management UI console. For
                         example this would be the cluster URL in the HCC Console for an OCM
                         reported cluster.
                api_href:
                    type: string
                    description: Reporter specific API link to the resource.
                local_resource_id:
                    type: string
                    description: |-
                        The ID assigned to this resource by the reporter, for example OCM cluster
                         ID, HBI's host id, or ACM managed cluster name etc.
                reporter_version:
                    type: string
                    description: version of the reporter
        kessel.inventory.v1beta1.resources.ResourceLabel:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        kessel.inventory.v1beta1.resources.UpdateK8sClusterRequest:
            type: object
            properties:
                k8s_cluster:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sCluster'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.UpdateK8sClusterResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta1.resources.UpdateK8sPolicyRequest:
            type: object
            properties:
                k8s_policy:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta1.resources.K8sPolicy'
                    description: "The resource to be updated will be defined by \n \\\"<reporter_data.reporter_type>:<reporter_instaance_id>:<reporter_data.local_resource_id>\\\"\n from the request body."
        kessel.inventory.v1beta1.resources.UpdateK8sPolicyResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta2.CheckForUpdateRequest:
            type: object
            properties:
                object:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta2.ResourceReference'
                    description: |-
                        Required parameters
                         - resource type and id
                         - permission (cannot be derived from type as types may have multiple edit permissions Ex: https://github.com/RedHatInsights/rbac-config/blob/master/configs/prod/schemas/src/notifications.ksl#L37)
                         - user (possibly derived from an identity token)
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.SubjectReference'
        kessel.inventory.v1beta2.CheckForUpdateResponse:
            type: object
            properties:
                allowed:
                    enum:
                        - ALLOWED_UNSPECIFIED
                        - ALLOWED_TRUE
                        - ALLOWED_FALSE
                    type: string
                    format: enum
        kessel.inventory.v1beta2.CheckRequest:
            type: object
            properties:
                object:
                    allOf:
                        - $ref: '#/components/schemas/kessel.inventory.v1beta2.ResourceReference'
                    description: |-
                        Required parameters (from an authz perspective)
                         - resource type and id
                         - permission (cannot be derived from the type as a type may have multiple 'read' permissions. Ex: https://github.com/RedHatInsights/rbac-config/blob/master/configs/prod/schemas/src/notifications.ksl#L31)
                         - user (possibly derived from an identity token)
                relation:
                    type: string
                subject:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.SubjectReference'
        kessel.inventory.v1beta2.CheckResponse:
            type: object
            properties:
                allowed:
                    enum:
                        - ALLOWED_UNSPECIFIED
                        - ALLOWED_TRUE
                        - ALLOWED_FALSE
                    type: string
                    format: enum
        kessel.inventory.v1beta2.DeleteResourceRequest:
            type: object
            properties:
                reference:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.ResourceReference'
        kessel.inventory.v1beta2.DeleteResourceResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta2.ReportResourceRequest:
            type: object
            properties:
                inventoryId:
                    type: string
                    description: |-
                        The Kessel Inventory-assigned ID of the *Resource*.

                         Usually not required during reporting; populated internally during correlation.
                type:
                    type: string
                    description: |-
                        The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").

                         Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
                         Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
                         Used to:
                         - Select the appropriate schema to validate the *Reporter Representation*
                         - Identify a *Reporter's Representation* uniquely in Kessel Inventory
                reporterType:
                    type: string
                    description: |-
                        The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").

                         Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
                         Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
                         Used to:
                         - Select the appropriate schema to validate the *Reporter Representation*
                         - Identify a *Reporter's Representation* uniquely in Kessel Inventory
                reporterInstanceId:
                    type: string
                    description: |-
                        Identifier for the specific instance of the *Reporter*.
                         This may not be applicable to all Reporters

                         Used to distinguish between multiple instances of the same `reporter_type`.
                         Does not require prior coordination with Kessel Inventory.
                representations:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.ResourceRepresentations'
                writeVisibility:
                    enum:
                        - WRITE_VISIBILITY_UNSPECIFIED
                        - MINIMIZE_LATENCY
                        - IMMEDIATE
                    type: string
                    description: |-
                        Controls the visibility guarantees of the write operation in Kessel Inventory.

                         - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
                         - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.

                         Use `IMMEDIATE` only if your use case requires strong consistency guarantees
                         (e.g., writing and immediately checking access to the resource).
                    format: enum
            description: Request to register or update a *Reporter*'s *Representation* of a *Resource* in Kessel Inventory.
        kessel.inventory.v1beta2.ReportResourceResponse:
            type: object
            properties: {}
        kessel.inventory.v1beta2.ReporterReference:
            type: object
            properties:
                type:
                    type: string
                instanceId:
                    type: string
        kessel.inventory.v1beta2.RepresentationMetadata:
            type: object
            properties:
                localResourceId:
                    type: string
                apiHref:
                    type: string
                consoleHref:
                    type: string
                reporterVersion:
                    type: string
        kessel.inventory.v1beta2.ResourceReference:
            type: object
            properties:
                resourceType:
                    type: string
                resourceId:
                    type: string
                reporter:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.ReporterReference'
        kessel.inventory.v1beta2.ResourceRepresentations:
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.RepresentationMetadata'
                common:
                    type: object
                reporter:
                    type: object
        kessel.inventory.v1beta2.SubjectReference:
            type: object
            properties:
                relation:
                    type: string
                    description: |-
                        An optional relation which points to a set of Subjects instead of the single Subject.
                         e.g. "members" or "owners" of a group identified in `subject`.
                resource:
                    $ref: '#/components/schemas/kessel.inventory.v1beta2.ResourceReference'
            description: A reference to a Subject or, if a `relation` is provided, a Subject Set.
tags:
    - name: KesselCheckService
    - name: KesselInventoryHealthService
    - name: KesselInventoryService
      description: |-
        KesselInventoryService provides APIs to perform relationship checks
         and manage inventory resource lifecycles (reporting and deletion).
    - name: KesselK8SClusterService
    - name: KesselK8SPolicyIsPropagatedToK8SClusterService
    - name: KesselK8SPolicyService
